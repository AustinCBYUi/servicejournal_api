{
  "swagger": "2.0",
  "info": {
    "title": "Service Journal API",
    "description": "An application program interface to manage data for the service journal application.",
    "version": "1.1.0"
  },
  "host": "servicejournal-api.onrender.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/login": {
      "description": "Allows a user to login to authenticate and view data."
    },
    "/logout": {
      "description": "Allows a user to logout safely to avoid data leaks."
    },
    "/client/": {
      "get": {
        "description": "Retrieves all clients from the database, returns them in json format. Requires authentication prior.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Creates a new client that is sent to be stored in the database in json format. Requires authentication prior to usage.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Daryl"
                },
                "age": {
                  "example": "35"
                },
                "streetAddress": {
                  "example": "8707 N Greenway Rd"
                },
                "unit": {
                  "example": "0"
                },
                "city": {
                  "example": "Glendale"
                },
                "state": {
                  "example": "AZ"
                },
                "postalCode": {
                  "example": "85047"
                },
                "type": {
                  "example": "Cell"
                },
                "number": {
                  "example": "6238189715"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "POST was successful"
          },
          "412": {
            "description": "Validation failed"
          },
          "500": {
            "description": "POST was unsuccessful"
          }
        }
      }
    },
    "/client/{id}": {
      "get": {
        "description": "Retrieves an individual client from the database by the {id} number. Requires authorization prior to usage.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "501": {
            "description": "Client ID was not found."
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "Updates a client's information in the database, uses modifiedCount to verify if fields were changed. Requires authorization prior to usage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "DoLittle"
                },
                "age": {
                  "example": "34"
                },
                "streetAddress": {
                  "example": "8707 N Greenway Rd"
                },
                "unit": {
                  "example": "0"
                },
                "city": {
                  "example": "Glendale"
                },
                "state": {
                  "example": "AZ"
                },
                "postalCode": {
                  "example": "85047"
                },
                "type": {
                  "example": "Cell"
                },
                "number": {
                  "example": "6238189715"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Fields were successfully updated."
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Validation of data failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Deletes a client from the database by {id} number. Requires authorization prior to usage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Client was deleted from the database."
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ticket/": {
      "get": {
        "description": "Retrieves all service tickets that are stored in the service ticket database. Requires authorization prior to usage.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Creates a new service ticket for a client. The cliendId, firstName and lastName should match the client database as well. Requires authorization prior to usage.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "example": "id#"
                },
                "firstName": {
                  "example": "John"
                },
                "lastName": {
                  "example": "Daryl"
                },
                "title": {
                  "example": "General Maintenance"
                },
                "price": {
                  "example": "$40.00"
                },
                "date": {
                  "example": "23OCT2024"
                },
                "mileage": {
                  "example": "34000"
                },
                "desc": {
                  "example": "Oil change. Oil used was Valvoline 10W-30 (5 quarts), used an STP ExtendedLife Oil Filter."
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Service ticket created successfully"
          },
          "412": {
            "description": "Validation of data failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/ticket/{id}": {
      "get": {
        "description": "Retrieves a specific service ticket by the {id} of the service ticket, this endpoint will be updated to search by: customer Id, first name or last name. Requires authorization prior to usage.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Service Ticket not found by {id}"
          }
        }
      },
      "put": {
        "description": "Updates the service ticket in the database, uses modifiedCount to verify if fields were changed. Requires authorization prior to usage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "clientId": {
                  "example": "id#"
                },
                "firstName": {
                  "example": "Johnny"
                },
                "lastName": {
                  "example": "Doberman"
                },
                "title": {
                  "example": "General Maintenance"
                },
                "price": {
                  "example": "$45.00"
                },
                "date": {
                  "example": "23OCT2024"
                },
                "mileage": {
                  "example": "34000"
                },
                "desc": {
                  "example": "Oil change. Oil used was Valvoline 10W-30 (5 quarts), and used a AutoZone oil filter."
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Service ticket successfully updated"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Validation of data failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Deletes a service ticket from the database. Requires authorization prior to usage.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Service ticket was deleted successfully."
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}